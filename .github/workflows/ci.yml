name: ci

on:
  push:
    branches: ['master']
  pull_request:
    branches: ['master']

env:
  NODE_ENV: production
  CI: true
  NUXT_CLOUDFLARE_ACCOUNT_ID: ${{ secrets.NUXT_CLOUDFLARE_ACCOUNT_ID }}
  NUXT_CLOUDFLARE_API_TOKEN: ${{ secrets.NUXT_CLOUDFLARE_API_TOKEN }}
  NUXT_CLOUDFLARE_NAMESPACE_ID: ${{ secrets.NUXT_CLOUDFLARE_NAMESPACE_ID }}

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup
        uses: ./.github/actions/setup
        with:
          node-version: '22'

      - name: Lint code
        run: pnpm lint
        env:
          CI: true

  type-check:
    name: Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup
        uses: ./.github/actions/setup
        with:
          node-version: '22'

      - name: Type check
        run: pnpm type-check
        env:
          CI: true

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup
        uses: ./.github/actions/setup
        with:
          node-version: '22'

      - name: Run unit tests
        run: pnpm test:run
        env:
          CI: true

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup
        uses: ./.github/actions/setup
        with:
          node-version: '22'

      - name: Run tests with coverage
        run: pnpm test:coverage
        env:
          CI: true

  playwright-install:
    name: Install Playwright
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup
        uses: ./.github/actions/setup
        with:
          node-version: '22'

      - name: Install Playwright browsers
        run: pnpm test:e2e:install
        env:
          CI: true

  e2e:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: [playwright-install]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup
        uses: ./.github/actions/setup
        with:
          node-version: '22'

      - name: Start development server
        run: pnpm dev &
        env:
          CI: true

      - name: Wait for server
        run: npx wait-on http://localhost:3000
        env:
          CI: true

      - name: Run E2E tests
        run: pnpm test:e2e
        env:
          CI: true
          BASE_URL: http://localhost:3000

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup
        uses: ./.github/actions/setup
        with:
          node-version: '22'

      - name: Build application
        run: pnpm build
        env:
          CI: true

  upload-coverage:
    name: Upload Coverage
    runs-on: ubuntu-latest
    needs: [coverage]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup
        uses: ./.github/actions/setup
        with:
          node-version: '22'

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false

  quality-gate:
    runs-on: ubuntu-latest
    needs: [lint, type-check, test, coverage, e2e, build]
    steps:
      - name: Quality Gate
        run: |
          echo "‚úÖ All checks passed successfully!"
          echo "üìä Test coverage generated"
          echo "üîç Code quality validated"
          echo "üèóÔ∏è Build completed successfully"
